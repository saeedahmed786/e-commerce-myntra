[{"E:\\demo-app\\Frontend\\src\\index.js":"1","E:\\demo-app\\Frontend\\src\\App.js":"2","E:\\demo-app\\Frontend\\src\\Components\\Products.js":"3","E:\\demo-app\\Frontend\\src\\Components\\About.js":"4","E:\\demo-app\\Frontend\\src\\Components\\Homepage\\Home.js":"5","E:\\demo-app\\Frontend\\src\\Components\\Admin\\AdminPanel.js":"6","E:\\demo-app\\Frontend\\src\\Components\\Navbar.js":"7","E:\\demo-app\\Frontend\\src\\Components\\Homepage\\data.js":"8","E:\\demo-app\\Frontend\\src\\Components\\Homepage\\ExploreTopBrands.js":"9","E:\\demo-app\\Frontend\\src\\Components\\Homepage\\CategoriesToBag.js":"10","E:\\demo-app\\Frontend\\src\\Components\\Homepage\\Trendings.js":"11","E:\\demo-app\\Frontend\\src\\Components\\Redux\\Redux.js":"12","E:\\demo-app\\Frontend\\src\\Components\\Admin\\GetCategories.js":"13","E:\\demo-app\\Frontend\\src\\Components\\Admin\\CreateCategory.js":"14","E:\\demo-app\\Frontend\\src\\Components\\Admin\\adminSideBar.js":"15","E:\\demo-app\\Frontend\\src\\Components\\404.js":"16","E:\\demo-app\\Frontend\\src\\Components\\Admin\\Layout.js":"17","E:\\demo-app\\Frontend\\src\\Components\\Admin\\Users.js":"18","E:\\demo-app\\Frontend\\src\\Components\\Admin\\CreateProducts.js":"19","E:\\demo-app\\Frontend\\src\\Components\\Admin\\GetProducts.js":"20","E:\\demo-app\\Frontend\\src\\Components\\Admin\\createBrand.js":"21","E:\\demo-app\\Frontend\\src\\Components\\Admin\\GetBrands.js":"22","E:\\demo-app\\Frontend\\src\\Components\\Admin\\editProduct.js":"23"},{"size":338,"mtime":1610037613232,"results":"24","hashOfConfig":"25"},{"size":1806,"mtime":1611097107390,"results":"26","hashOfConfig":"25"},{"size":1088,"mtime":1610037707496,"results":"27","hashOfConfig":"25"},{"size":422,"mtime":1610038176457,"results":"28","hashOfConfig":"25"},{"size":4998,"mtime":1610038584493,"results":"29","hashOfConfig":"25"},{"size":285,"mtime":1610037923166,"results":"30","hashOfConfig":"25"},{"size":4291,"mtime":1610139804945,"results":"31","hashOfConfig":"25"},{"size":7384,"mtime":1609529932023,"results":"32","hashOfConfig":"33"},{"size":3266,"mtime":1609529753503,"results":"34","hashOfConfig":"25"},{"size":4177,"mtime":1609529787391,"results":"35","hashOfConfig":"25"},{"size":17399,"mtime":1609529769773,"results":"36","hashOfConfig":"25"},{"size":3255,"mtime":1610037624201,"results":"37","hashOfConfig":"25"},{"size":9039,"mtime":1610845440012,"results":"38","hashOfConfig":"25"},{"size":9887,"mtime":1610678383274,"results":"39","hashOfConfig":"25"},{"size":1633,"mtime":1610688428912,"results":"40","hashOfConfig":"25"},{"size":305,"mtime":1609873643728,"results":"41","hashOfConfig":"25"},{"size":565,"mtime":1610047623707,"results":"42","hashOfConfig":"25"},{"size":242,"mtime":1609878779622,"results":"43","hashOfConfig":"25"},{"size":10454,"mtime":1610842141769,"results":"44","hashOfConfig":"25"},{"size":8918,"mtime":1611103641890,"results":"45","hashOfConfig":"25"},{"size":1915,"mtime":1610817044367,"results":"46","hashOfConfig":"25"},{"size":5287,"mtime":1610823273251,"results":"47","hashOfConfig":"25"},{"size":14944,"mtime":1611192194496,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"h59wsu",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"159a7t0",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"51"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"51"},"E:\\demo-app\\Frontend\\src\\index.js",[],["107","108"],"E:\\demo-app\\Frontend\\src\\App.js",["109"],"import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { DefaultComp } from './Components/404'\nimport { About } from './Components/About'\nimport { AdminPanel } from './Components/Admin/AdminPanel'\nimport { CreateCategory } from './Components/Admin/CreateCategory'\nimport {EditProduct} from './Components/Admin/editProduct'\nimport { GetBrands } from './Components/Admin/GetBrands'\nimport { GetCategory } from './Components/Admin/GetCategories'\nimport { GetProducts } from './Components/Admin/GetProducts'\nimport { Layout } from './Components/Admin/Layout'\nimport { Users } from './Components/Admin/Users'\nimport { Home } from './Components/Homepage/Home'\nimport { Navbar } from './Components/Navbar'\nimport { Products } from './Components/Products'\n\n const App = () => {\n  return (\n    <div>\n      <BrowserRouter>\n      <Navbar/>\n      <div style = {{marginTop: '90px'}}>\n      <Switch>\n      <Route exact path = '/' component = {Home}/>\n      <Route exact path = '/admin' component = {AdminPanel}/>\n      <Route exact path = '/admin/all-categories' component = {GetCategory}/>\n      <Route exact path = '/admin/all-brands' component = {GetBrands}/>\n      <Route exact path = '/admin/create-category' component = {CreateCategory}/>\n      <Route exact path = '/admin/get-products' component = {GetProducts}/>\n      <Route exact path = '/admin/product/edit/:id' component = {EditProduct}/>\n      <Route exact path = '/admin/users' component = {Users}/>\n      <Route exact path = '/products' component = {Products}/>\n      <Route exact path = '/about' component = {About}/>\n      <Route exact path = '/admin' component = {AdminPanel}/>\n       <Route component = {DefaultComp}/>\n      </Switch>\n      </div>\n      </BrowserRouter>\n    </div>\n\n  )\n}\n\nexport default App;","E:\\demo-app\\Frontend\\src\\Components\\Products.js",[],"E:\\demo-app\\Frontend\\src\\Components\\About.js",[],"E:\\demo-app\\Frontend\\src\\Components\\Homepage\\Home.js",[],"E:\\demo-app\\Frontend\\src\\Components\\Admin\\AdminPanel.js",[],"E:\\demo-app\\Frontend\\src\\Components\\Navbar.js",["110"],"import axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const fetchCategories = () => {\r\n    axios.get('/api/categories').then(data => {\r\n      setCategories(data.data);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    fetchCategories();\r\n\r\n\r\n    return () => {\r\n\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n\r\n      <nav className=\"navbar navbar-expand-lg navbar-light fixed-top bg-white\">\r\n        <Link className=\"navbar-brand\" to=\"/\">M</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav mr-auto list-unstyle pt-3\" style = {{fontSize: '12px'}}>\r\n                       \r\n                        \r\n                    {\r\n                      categories.map(data => {\r\n                        return (\r\n                          <li className='nav-item'> \r\n                          <div className=\"dropdown\">\r\n                            <Link className='nav-link' id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                              {data.name}\r\n                          </Link>\r\n                       <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                        <div className = 'row' style = {{width: '90vw'}}> \r\n                        {\r\n                          data.children.length > 0 ?\r\n                              data.children.map(sub => {\r\n                                return (\r\n                                  <div className = 'col-md-3 font-weight-bold' key={data.id} style = {{fontSize: '12px'}}>\r\n                                  <a className=\"dropdown-item text-danger\" style = {{fontSize: '12px'}} key={sub.id} to=\"/\">{sub.name}</a>\r\n                                   \r\n                                   {\r\n                                     sub.children.length > 0 ?\r\n                                     sub.children.map(child => {\r\n                                       return(\r\n                                        <p className=' ml-4 mt-2'>{child.name}</p>\r\n                          \r\n                                          \r\n                                         \r\n                                       )\r\n                                     }) :\r\n                                     null\r\n                                   }\r\n                                  \r\n                                   </div>\r\n \r\n                                   \r\n                                )\r\n                              }) : null\r\n\r\n                        }   \r\n                        \r\n\r\n                          </div>  \r\n                      </div>\r\n                      </div>\r\n                      </li>\r\n                 \r\n                        )\r\n                      })\r\n\r\n                    \r\n                    }\r\n                \r\n            <form className=\"d-flex form-search\">\r\n            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\r\n              <input className=\"form-control mr-sm-2\" type=\"search\" placeholder= \"Search\" aria-label=\"Search\"/>\r\n            </form>\r\n            <li className = 'nav-item profile ml-5' style = {{fontWeight: 'normal'}}>\r\n            <i className=\"fas fa-user\" style = {{paddingLeft: '11px'}}/><br/><span style = {{fontSize: '14px'}}>Profile</span>\r\n\r\n            </li>\r\n            <li className = 'ml-3'>\r\n            <i className=\"fas fa-ribbon\" style = {{paddingLeft: '12px'}}></i><br/><span style = {{fontSize: '14px'}}>Wishlist</span>\r\n\r\n            </li>\r\n            <li className = 'ml-3'>\r\n            <i className=\"fas fa-shopping-cart\"></i><br/><span style = {{fontSize: '14px'}}>Bag</span>\r\n\r\n            </li>\r\n            </ul>\r\n            </div>   \r\n\r\n         \r\n      </nav>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","E:\\demo-app\\Frontend\\src\\Components\\Homepage\\data.js",["111"]," export default {\r\n   \r\n      NavData: [\r\n\r\n         {\r\n            id: 'jshafjefhwr93852052050',\r\n            name: 'Topwear',\r\n            subcategory: [\r\n               {\r\n                  _id : 'mcnsjcjcbjcb13242424',\r\n                  name: 'T-shirts',\r\n                  products: [\r\n                     {\r\n                        id: '93948394239ujfhjfdjfhdjfdj',\r\n                        name: 'Campus Sutra',\r\n                        // colors: ['black', 'gray', 'white', 'blue', 'darkblue', 'yellow'],\r\n                        // sizes: ['S', 'M', 'L', 'XL', 'XXL']\r\n                     },\r\n                     {\r\n                        id: 'fbjfbdjfjfejfh2384839',\r\n                        name: 'Levis',\r\n                        // colors: ['black', 'gray', 'white', 'blue', 'darkblue', 'yellow'],\r\n                        // sizes: ['S', 'M', 'L', 'XL', 'XXL']\r\n                     },\r\n                     {\r\n                        id: 'dasfjhqeiur9232uriewjf',\r\n                        name: 'Royal Tag',\r\n                        // colors: ['black', 'gray', 'white', 'blue', 'darkblue', 'yellow'],\r\n                        // sizes: ['S', 'M', 'L', 'XL', 'XXL']\r\n                     },\r\n                     {\r\n                        id: 'shdshdhdhefg390239',\r\n                        name: 'Cougar',\r\n                        // colors: ['black', 'gray', 'white', 'blue', 'darkblue', 'yellow'],\r\n                        // sizes: ['S', 'M', 'L', 'XL', 'XXL']\r\n                     },\r\n\r\n\r\n                  ]\r\n                   \r\n               },\r\n               {\r\n                   _id : 'cnasklddjjbjfqjf347347949',\r\n                   name: 'Sweatshirts',\r\n                   products: [\r\n                      \r\n                     {\r\n                        id: 'hfiwer03909230239009023',\r\n                        name: 'Campus Sutra',\r\n                        // colors: ['black', 'gray', 'white', 'blue', 'darkblue', 'yellow'],\r\n                        // sizes: ['S', 'M', 'L', 'XL', 'XXL']\r\n\r\n                     },\r\n                     {\r\n                        id: 'ncbjbjsfwejhr948230032',\r\n                        name: 'H & M',\r\n                        // colors: ['black', 'gray', 'white', 'blue', 'darkblue', 'yellow'],\r\n                        // sizes: ['S', 'M', 'L', 'XL', 'XXL']\r\n\r\n                     },\r\n                     {\r\n                        id: '859urekfkdfkdnmnmcxmc',\r\n                        name: 'Levis',\r\n                        // colors: ['black', 'gray', 'white', 'blue', 'darkblue', 'yellow'],\r\n                        // sizes: ['S', 'M', 'L', 'XL', 'XXL']\r\n\r\n                     },\r\n                   ]\r\n                    \r\n                },\r\n                {\r\n                   _id : 'dsdhdkkhfkfkashfk42343',\r\n                   name: 'Sweaters'\r\n                    \r\n                },\r\n                {\r\n                   _id : 'nbxjcbjjjjhjsjhhakhks33435',\r\n                   name: 'Jackets'\r\n                    \r\n                },\r\n                {\r\n                   _id :  'aaafaffaf524242424',\r\n                   name: 'Blazers'\r\n                    \r\n                },\r\n\r\n            ]\r\n\r\n         },\r\n         {\r\n            id: 'kdjakf09r83209302302',\r\n            name : 'Indian & Festive Wear',\r\n            subcategory: [\r\n               {\r\n                  _id : 'dfdfadf4235244244246',\r\n                  name: 'Kurtas & Kurta Sets'\r\n                   \r\n               },\r\n               {\r\n                _id : 'dfdbdjbjbjdfadf423524634364244246',\r\n                name: 'Sherwanis'\r\n                 \r\n             },\r\n             {\r\n                _id : 'ddjddas9d89q8fadfdfadf4235244244246',\r\n                name: 'Nehro Jackets'\r\n                 \r\n             },\r\n             {\r\n                _id : 'vknvk0gd0gsdgdfdfadf4235244244246',\r\n                name: 'Dhotis'\r\n                 \r\n             }\r\n\r\n            ]\r\n\r\n         },\r\n           \r\n         {\r\n            id: 'kdasjq094230490239430',\r\n            name : 'Bottomwear',\r\n            subcategory: [\r\n               {\r\n                  _id : 'lvdljsdjsdlsdljsdog9dfdfadf4235244244246',\r\n                  name: 'Jeans'\r\n                   \r\n               },\r\n               {\r\n                  _id : 'dkvjslgjsdkjkjds9dfdfadf4235244244246',\r\n                  name: 'Casual Trousers'\r\n                   \r\n               },\r\n          \r\n               {\r\n                  _id : 'vkkflbjgkskg9dfdfadf4235244244246',\r\n                  name: 'Formal Trousers'\r\n                   \r\n               },\r\n               {\r\n                  _id : 'pwfjkjkfaskfnasf8f8dfdfadf4235244244246',\r\n                  name: 'Shorts'\r\n                   \r\n               },\r\n               {\r\n                  _id : 'knfdgod0f993ugjdjdfdfadf4235244244246',\r\n                  name: 'Track Pants & Joggers'\r\n                   \r\n               }\r\n         \r\n\r\n            ]\r\n         },\r\n\r\n         {\r\n            id: '0039204kdjkffsfmfnfnfnfnh',\r\n            name: 'Innerwears & Sleepwears',\r\n            subcategory: [\r\n               {\r\n                  id: 'dhdgf93838hqjfh18198491',\r\n                  name: 'Briafs & Trunks'\r\n               },\r\n               {\r\n                  id: '87878fjfhjfhjfjfjhf',\r\n                  name: 'Boxers'\r\n               },\r\n               {\r\n                  id: 'kfkfjdf938934834839',\r\n                  name: 'Vests'\r\n               },\r\n               {\r\n                  id: 'kjasfj9382303040834830',\r\n                  name: 'Sleepwear & Longwear'\r\n               },\r\n               {\r\n                  id: 'sfj039430ruiffnikeoeo',\r\n                  name: 'Thermals'\r\n               },\r\n            ]\r\n         },\r\n         { \r\n            id: 'ammdjd0294204294204920',\r\n            name: 'Sports & Activewear',\r\n            subcategory: [\r\n               {\r\n                  id: '4948489248sdsdsdnsdmnsn',\r\n                  name: 'Briafs & Trunks'\r\n               },\r\n               {\r\n                  id: 'cascjajfhq913893802333',\r\n                  name: 'Boxers'\r\n               },\r\n               {\r\n                  id: 'ccnfh948982rjfsdnfn',\r\n                  name: 'Vests'\r\n               },\r\n               {\r\n                  id: 'sscnsdvsd9348239523094',\r\n                  name: 'Sleepwear & Longwear'\r\n               },\r\n               {\r\n                  id: 'ksckasfker230423049309',\r\n                  name: 'Thermals'\r\n               },\r\n            ]\r\n         },\r\n         {\r\n            id: 'jdjasfjafh239482398394',\r\n            name: 'Footwear',\r\n            subcategory: [\r\n               {\r\n                  id: 'akkd0294829033910330',\r\n                  name: 'Briafs & Trunks'\r\n               },\r\n               {\r\n                  id: 'sjadhsjfhwf998428924',\r\n                  name: 'Boxers'\r\n               },\r\n               {\r\n                  id: 'sj9r8239rjnmnf9238ugjff',\r\n                  name: 'Vests'\r\n               },\r\n               {\r\n                  id: 'djahfhr39823580430',\r\n                  name: 'Sleepwear & Longwear'\r\n               },\r\n               {\r\n                  id: 'ajdasjfhq0492309023903',\r\n                  name: 'Thermals'\r\n               },\r\n            ]\r\n         }\r\n      \r\n      \r\n    \r\n      \r\n    \r\n     ]\r\n\r\n }\r\n       \r\n                \r\n\r\n\r\n   \r\n     \r\n\r\n\r\n\r\n",["112","113"],"E:\\demo-app\\Frontend\\src\\Components\\Homepage\\ExploreTopBrands.js",[],"E:\\demo-app\\Frontend\\src\\Components\\Homepage\\CategoriesToBag.js",[],"E:\\demo-app\\Frontend\\src\\Components\\Homepage\\Trendings.js",[],"E:\\demo-app\\Frontend\\src\\Components\\Redux\\Redux.js",[],"E:\\demo-app\\Frontend\\src\\Components\\Admin\\GetCategories.js",["114","115","116","117","118","119"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport 'antd/dist/antd.css';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout } from './Layout';\r\nimport swal from 'sweetalert';\r\nimport { Select } from 'antd';\r\nimport Modal from 'antd/lib/modal/Modal';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\n\r\nexport const GetCategory = (props) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [success, setSuccess] = useState(false);\r\n  const [editCategory, setEditCategory] = useState('');\r\n  const [editParentCat, setEditParentCat] = useState('');\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [editedCategory, setEditedCategory] = useState('');\r\n  const [editCatId, setEditCatId] = useState('');\r\n\r\n\r\n  const fetchCategories = () => {\r\n    const response = axios.get('/api/categories').then(data => {\r\n      setCategories(data.data);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    fetchCategories();\r\n\r\n\r\n    return () => {\r\n\r\n    }\r\n  }, [success]);\r\n\r\n  /********************************************************Editing Categories******************************/\r\n    const getEditCatHandler = (editId) => {\r\n      setEditCatId(editId);\r\n      axios.get(`/api/categories/edit/${editId}`).then(res => {\r\n        console.log(res);\r\n            if(res.data.parentCat){\r\n              setEditCategory(res.data.category.name);\r\n            setEditParentCat(res.data.parentCat.name);\r\n            } else {\r\n              setEditCategory(res.data.category.name);\r\n            }\r\n      });\r\n       \r\n\r\n    }\r\n\r\n    const editHandler = (e) => {\r\n      e.preventDefault();\r\n      axios.put(`/api/categories/update/${editCatId}`, {cat: editCategory}).then(res => {\r\n            setSuccess(true);\r\n            swal('Good Job!', res.data.successMessage, 'success');\r\n            setSuccess(false);\r\n          })\r\n    }\r\n\r\n  /********************************************************Deleting Categories******************************/\r\n\r\n  const deleteHandler = (deleteId) => {\r\n    axios.delete(`/api/categories/delete/${deleteId}`).then(res => {\r\n      setSuccess(true);\r\n      swal('Good Job!', res.data.successMessage, 'success');\r\n      setSuccess(false);\r\n    })\r\n  }\r\n\r\n\r\n    /********************************************************Editing Categories******************************/\r\n\r\n  const handleCatChange = (e) => {\r\n    setEditCategory(e.target.value);\r\n}\r\n\r\nconsole.log(editCategory);\r\n\r\n\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <div className='text-center' >\r\n\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Main Categories</th>\r\n              <th scope=\"col\">Actions</th>\r\n              <th scope=\"col\">Sub-Categories</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n            {\r\n              categories.map(cat => {\r\n                return (\r\n                  <>\r\n                  <tr key={cat._id} style={{ borderBottom: '1px solid black' }}>\r\n                  \r\n\r\n                  \r\n                    <th scope=\"col\">{cat.name}</th>\r\n                    <th>\r\n                      <Link className='btn' style={{ textDecoration: 'none' }} onClick = {() => {getEditCatHandler(cat._id); showModal() }}><i className=\"fa fa-edit\"></i></Link>\r\n                                   {\r\n                                     cat.children.length === 0 ?\r\n                                     <button className='btn' onClick= {() => deleteHandler(cat._id)}><i className=\"fa fa-trash-alt\"></i></button>\r\n                                          :\r\n                                          null\r\n\r\n                                   }\r\n                            \r\n                    </th>\r\n                    <table className=\"table subCat-table\">\r\n                      <tbody>\r\n\r\n                        {\r\n                          cat.children.length > 0 ?\r\n                            cat.children.map(subCat => {\r\n                              return (\r\n                                  \r\n                                <tr key={subCat._id}>\r\n                                  <th>{subCat.name}</th>\r\n                                  <th>\r\n\r\n                                    \r\n                                    <Link className='btn' style={{ textDecoration: 'none' }} onClick = {() => {getEditCatHandler(subCat._id); showModal() }}><i className=\"fa fa-edit\"></i></Link>\r\n                                          {\r\n                                            subCat.children.length === 0 ?\r\n                                            <button className='btn' onClick= {() => deleteHandler(subCat._id)}><i className=\"fa fa-trash-alt\"></i></button>\r\n                                                :\r\n                                                null\r\n\r\n                                          }\r\n\r\n                                  </th>\r\n                                  <table className = 'table subCat-table'>\r\n                                    <tbody>\r\n                                  {\r\n                                    subCat.children.length > 0 ? \r\n                                    subCat.children.map(child => {\r\n                                      return(\r\n                                         <tr key = {child._id}>\r\n                                           <th>{child.name}</th>\r\n                                           <th>\r\n                                           <button className='btn' style={{ textDecoration: 'none' }} onClick = {() => {getEditCatHandler(child._id); showModal() }}><i className=\"fa fa-edit\"></i></button>\r\n                                           <Modal title=\"Edit Categories\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>     \r\n                                              <form  className = 'text-center' onSubmit = {editHandler}>\r\n                                              <h4 className = 'mb-5'>Edit Your Category</h4>\r\n                                              {\r\n                                              editParentCat ? \r\n                                              <>\r\n                                                <input disabled value={editParentCat} style={{ width: 347 }}>\r\n                                                  </input>\r\n                                                  <div className=\"form-group mt-4\" style = {{paddingLeft: '62px'}}> \r\n                                                      <input type=\"text\" className=\"form-control mb-2 border\" id = 'editedCategory' name = 'editedCategory' value = {editCategory}  onChange = {handleCatChange} />\r\n                                                  </div> \r\n                                                  </>  \r\n\r\n                                                  :\r\n\r\n                                                  <div className=\"form-group mt-4\" style = {{paddingLeft: '62px'}}> \r\n                                                      <input type=\"text\" className=\"form-control mb-2 border\" id = 'editedCategory' name = 'editedCategory' value = {editCategory}  onChange = {handleCatChange} />\r\n                                                  </div> \r\n                                                  \r\n                                              }\r\n                                             \r\n                                                 \r\n                                              <button type=\"submit\" className=\"btn btn-outline-danger mt-4\">Submit</button>\r\n                                              </form>\r\n                                              </Modal>\r\n\r\n                                              <button className='btn' onClick= {() => deleteHandler(child._id)}><i className=\"fa fa-trash-alt\"></i></button>\r\n                                             \r\n                                           </th>\r\n                                         </tr>\r\n\r\n                                      )\r\n\r\n                                    }) :\r\n                                    null\r\n                                  }\r\n                                  </tbody>\r\n                                  </table>\r\n                                  \r\n                                </tr>\r\n                               \r\n\r\n\r\n                              )\r\n                            }) : null\r\n                        }\r\n                      </tbody>\r\n                      \r\n\r\n                    </table>\r\n                    \r\n                  \r\n                  \r\n                  </tr>\r\n                \r\n                  </>\r\n                  \r\n\r\n                )\r\n              })\r\n            }\r\n\r\n          </tbody>\r\n        </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n","E:\\demo-app\\Frontend\\src\\Components\\Admin\\CreateCategory.js",["120","121","122","123","124","125","126"],"import React, { useEffect, useState } from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport { Modal, Button, Select } from 'antd';\r\nimport { PlusOutlined  } from '@ant-design/icons';\r\nimport { Layout } from './Layout';\r\nimport { CreateProducts } from './CreateProducts';\r\nimport { CreateBrand } from './createBrand';\r\nconst { Option } = Select;\r\n\r\n\r\nexport const CreateCategory = (props) => {\r\n\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isMainCatModalVisible, setIsMainCatModalVisible] = useState(false);\r\n    const [isModalVisibles, setIsModalVisibles] = useState(false);\r\n    const [selectCat, setSelectCat] = useState('');\r\n    const [selectSubCat, setSelectSubCat] = useState('');\r\n    const [categories, setCategories] = useState([]);\r\n\r\n\r\n\r\n    /*********************************************** States ******************************************/\r\n    const [catData, setCatData] = useState({\r\n        rootMainCategory: '',\r\n        mainCategory: '',\r\n        subCategory: '',\r\n        childSubCategory: '',\r\n        subCategoryOfChildSubCategory: '',\r\n          });\r\n  \r\n    const {rootMainCategory, mainCategory, subCategory, childSubCategory, subCategoryOfChildSubCategory } = catData;\r\n   \r\n\r\n    \r\n\r\n    /****************************************************Get Categories *************************************/\r\n        const fetchCategories = () => {\r\n              const response = axios.get('/api/categories').then(data => {\r\n              setCategories(data.data);\r\n                  })\r\n           }\r\n              \r\n         useEffect(() => {\r\n              \r\n                  fetchCategories();\r\n              \r\n              \r\n                  return () => {\r\n              \r\n                  }\r\n           }, []);\r\n\r\n    \r\n    \r\n    /***********************************************  onChange Events ******************************************/\r\n      const handleCatChange = (e) => {\r\n            setCatData({\r\n                ...catData,\r\n                [e.target.name]: e.target.value\r\n            });\r\n        }\r\n\r\n      function handleChange(value) {\r\n            setSelectCat(value);\r\n          }\r\n\r\n      function handleChildSubCatChange(value) {\r\n            setSelectSubCat(value);\r\n          }   \r\n\r\n\r\n\r\n          \r\n    /*********************************************** Submit Events ******************************************/\r\n    const submitRootMainCatHandler = (e) => {\r\n      e.preventDefault();\r\n      const submitData = axios.post('/api/categories/main-category/create', {name: rootMainCategory.toUpperCase()}).then( response => {\r\n          if(response.status === 200) {\r\n              swal('Good Job', response.data , 'success');\r\n          } else if(response.status === 201) {\r\n              swal('Sorry', response.data.errorMessage , 'error');\r\n          }\r\n          else {\r\n              swal('Error','Error in Creating Main Category', 'error');\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n    \r\n    const submitSubCatHandler = (e) => {\r\n        e.preventDefault();\r\n        const submitData = axios.post('/api/categories/sub-category/create', {parentId: selectCat , name: subCategory.toUpperCase()}).then( response => {\r\n            if(response.status === 200) {\r\n                swal('Good Job', response.data , 'success');\r\n            } else if(response.status === 201) {\r\n                swal('Sorry', response.data.errorMessage , 'error');\r\n            }\r\n            else {\r\n                swal('Error','Error in Creating New Category', 'error');\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n  \r\n    const handleChildSubCatSubmit = (e) => {\r\n        e.preventDefault();\r\n        const submitSubCatData = axios.post('/api/categories/child-sub-category/create', {parentId: selectSubCat, name: childSubCategory.toUpperCase()}).then( response => {\r\n            if(response.status === 200) {\r\n                swal('Good Job', response.data.successMessage , 'success');\r\n            } else if(response.status === 201) {\r\n                swal('Sorry', response.data.errorMessage , 'error')\r\n            }\r\n             else  {\r\n                swal('Error','error in Creating Category', 'error');\r\n            } \r\n        })\r\n    }\r\n  \r\n\r\n  \r\n    /*******************************Main Category***********************************/\r\n    const showCatModal = () => {\r\n        setIsMainCatModalVisible(true);\r\n      };\r\n      const handleCatOk = () => {\r\n        setIsMainCatModalVisible(false);\r\n      };\r\n      const handleCatCancel = () => {\r\n        setIsMainCatModalVisible(false);\r\n      };\r\n\r\n      /*******************************Sub-Category *******************************/\r\n    \r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n      };\r\n      const handleOk = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n      const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n\r\n      /**************************************************Child Sub-Category ******************/\r\n     \r\n      const showModals = () => {\r\n        setIsModalVisibles(true);\r\n      };\r\n     \r\n     \r\n      const handleOks = () => {\r\n        setIsModalVisibles(false);\r\n      };\r\n    \r\n     \r\n      const handleCancels = () => {\r\n        setIsModalVisibles(false);\r\n      };\r\n        \r\n     \r\n    /*********************************************** Main Forms ******************************************/\r\n  \r\n    return (\r\n        <>\r\n         <Layout sidebar>\r\n        <div className = 'text-center pt-5' style = {{height: '100vh'}}>\r\n        <span className = 'mr-3'>\r\n         <Button type=\"primary\" size = 'large' icon={ <PlusOutlined />} onClick = {showCatModal} >\r\n              <span className = 'pb-2'>Create a Main Category</span>\r\n            </Button>\r\n         \r\n          <Modal title=\"Main Category\" visible={isMainCatModalVisible} onOk={handleCatOk} onCancel={handleCatCancel}>\r\n            <form onSubmit={submitRootMainCatHandler} className = 'text-center'>\r\n            <h4 className = 'mb-4'>Create Main Category</h4>\r\n            <div className=\"form-group\" style = {{paddingLeft: '62px'}}>\r\n                    <input type=\"text\" className=\"form-control mb-2\" id = 'rootMainCategory' value = {rootMainCategory} name = 'rootMainCategory' placeholder=\"Enter Your Main Category\" onChange = {handleCatChange} />\r\n                </div>\r\n            <button type=\"submit\" className=\"btn btn-outline-danger mt-4\">Submit</button>\r\n            </form>\r\n            </Modal>\r\n         </span>\r\n\r\n\r\n         <span className = 'mr-3'>\r\n         <Button type=\"primary\" size = 'large' icon={ <PlusOutlined />} onClick = {showModal} >\r\n              <span className = 'pb-2'>Create Sub-Category</span>\r\n            </Button>\r\n         \r\n          <Modal title=\"Sub-Category\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n            <form onSubmit={submitSubCatHandler} className = 'text-center'>\r\n            <h4 className = 'mb-5'>Create Sub-Category</h4>\r\n            <Select defaultValue=\"Please Select...\" style={{ width: 347 }} onChange={handleChange}>\r\n              {\r\n                categories.map(cat => {\r\n                  return(\r\n                    <Option key = {cat._id} value={cat._id}>{cat.name}</Option>\r\n\r\n                  )\r\n                })\r\n              }\r\n                </Select>\r\n                <div className=\"form-group mt-4\" style = {{paddingLeft: '62px'}}>\r\n                    <input type=\"text\" className=\"form-control mb-2\" id = 'SubCategory' value = {subCategory} name = 'subCategory' placeholder=\"Enter Your Sub-Category Name\" onChange = {handleCatChange} />\r\n                </div>\r\n            <button type=\"submit\" className=\"btn btn-outline-danger mt-4\">Submit</button>\r\n            </form>\r\n            </Modal>\r\n         </span>\r\n\r\n\r\n         <span>\r\n        \r\n         <Button type=\"primary\" size = 'large' icon={ <PlusOutlined />} onClick = {showModals} >\r\n                Create a Child Sub-Category\r\n            </Button>\r\n            <Modal title=\"Child Sub-Category\" visible={isModalVisibles} onOk={handleOks} onCancel={handleCancels}>     \r\n            <form onSubmit = {handleChildSubCatSubmit} className = 'text-center'>\r\n            <h4 className = 'mb-5'>Create a Child Sub-Category</h4>\r\n            <Select defaultValue=\"Please Select...\" style={{ width: 347 }} onChange={handleChildSubCatChange}>\r\n              {\r\n                categories.map(cat => {\r\n                  return(\r\n                    <>\r\n                    <Option key = {cat._id} disabled className = 'text-danger'>{cat.name}</Option>\r\n                    {\r\n                      cat.children.length > 0 ?\r\n                      cat.children.map(subCat => {\r\n                        return(\r\n                          <Option key = {subCat._id} value={subCat._id} style = {{marginLeft: '28px'}}>{subCat.name}</Option>\r\n                        )\r\n                      }) \r\n                      :\r\n                      null\r\n                    }\r\n                    </>\r\n                  )\r\n                })\r\n              }\r\n                </Select>\r\n                <div className=\"form-group mt-4\" style = {{paddingLeft: '62px'}}> \r\n                    <input type=\"text\" className=\"form-control mb-2 border\" id = 'childSubCategory' name = 'childSubCategory' value = {childSubCategory} placeholder=\"Enter Relevant Child Sub-Category\" onChange = {handleCatChange} />\r\n                </div>\r\n            <button type=\"submit\" className=\"btn btn-outline-danger mt-4\">Submit</button>\r\n            </form>\r\n            </Modal>\r\n           \r\n            </span>\r\n            <span>\r\n              <CreateProducts/>\r\n            </span>\r\n            <span>\r\n              <CreateBrand/>\r\n            </span>\r\n            </div>\r\n            </Layout>\r\n\r\n        </>\r\n    )\r\n  }\r\n","E:\\demo-app\\Frontend\\src\\Components\\Admin\\adminSideBar.js",[],["127","128"],"E:\\demo-app\\Frontend\\src\\Components\\404.js",[],"E:\\demo-app\\Frontend\\src\\Components\\Admin\\Layout.js",[],"E:\\demo-app\\Frontend\\src\\Components\\Admin\\Users.js",[],"E:\\demo-app\\Frontend\\src\\Components\\Admin\\CreateProducts.js",["129","130","131"],"import { Button, message, Select, TreeSelect, Upload } from 'antd';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { PlusOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst { Option } = Select;\r\nconst { TreeNode } = TreeSelect;\r\n\r\n\r\nexport const CreateProducts = () => {\r\n   \r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [size, setSize] = useState([]);\r\n  const [color, setColor] = useState([]);\r\n  const [file, setFile] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [categories, setCategories] = useState([]);\r\n  const [brands, setBrands] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [cat, setCat] = useState('');\r\n  const [productData, setProductData] = useState({\r\n   title: '',\r\n   subTitle: '',\r\n   price: '',\r\n   offer: ''\r\n\r\n\r\n  });\r\n\r\n  const { title, subTitle, price, offer } = productData;\r\n\r\n  /***********************************************onChange *******************************************/\r\n      const handleProductChange = (e) => {\r\n        setProductData({\r\n          ...productData,\r\n        [e.target.name] : e.target.value\r\n        });\r\n      }\r\n       \r\n      const handleImageChange = (e) => { \r\n        setFile([\r\n          ...file,\r\n          e.target.files[0]\r\n\r\n        ])\r\n      }\r\n      \r\n\r\n      function handleSizeChange(value) {\r\n           setSize(\r\n             value\r\n\r\n           );\r\n      }\r\n\r\n     const onCatChange = value => {\r\n        setCat(value);\r\n      };\r\n\r\n      function handleBrandChange(value) {\r\n        setBrandId(\r\n          value\r\n\r\n        );\r\n       }\r\n\r\n       function handleColorChange(value) {\r\n        setColor(\r\n          value\r\n\r\n        );\r\n       }\r\n    \r\n\r\n\r\n    /************************************************ Submit **********************************************/  \r\n        \r\n    const submitHandler =  (e) => {\r\n        e.preventDefault();\r\n      let data = new FormData();\r\n      data.append('title', title);\r\n      data.append('subTitle', subTitle);\r\n      data.append('description', description);\r\n      data.append('price', price);\r\n      data.append('offer', offer);\r\n      data.append('cat', cat);\r\n      data.append('brandId', brandId);\r\n      for(let sizes of size) {\r\n        data.append('sizes', sizes);\r\n       }\r\n       for(let colors of color) {\r\n        data.append('colors', colors);\r\n       }\r\n\r\n      for(let pic of file) {\r\n       data.append('file', pic);\r\n      }\r\n      axios.post('/api/products/create', data).then(res => {\r\n          if (res.status === 200) {\r\n          swal('Great!', res.data.successMessage, 'success');\r\n          }\r\n          else {\r\n            swal('Error', res.data.errorMessage, 'error');\r\n          }\r\n        })\r\n\r\n      }\r\n  \r\n \r\n      //******************************************************** Modal ****************************************//\r\n\r\n      const showModal = () => {\r\n        setIsModalVisible(true);\r\n      };\r\n      const handleOk = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n      const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n\r\n  /****************************************** Get Categories & Brands *******************************************/    \r\n  const fetchCategories =  () => {\r\n      axios.get('/api/categories').then(data => {\r\n      setCategories(data.data);\r\n    })\r\n  }\r\n\r\n  const fetchBrands = () => {\r\n      axios.get('/api/categories/brands').then(data => {\r\n      setBrands(data.data.brands);\r\n    })\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    fetchCategories();\r\n    fetchBrands();\r\n    return () => {\r\n    }\r\n  }, [isModalVisible]);\r\n\r\n\r\n\r\n \r\n    return (\r\n        <div style = {{marginTop: '10px'}}>\r\n               <Button type = 'primary' size = 'large' icon={ <PlusOutlined />} onClick = {showModal} >\r\n              <span className = 'pb-2'>Create a Product</span>\r\n            </Button>\r\n         \r\n          <Modal title=\"Product\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n            <form onSubmit={submitHandler} className = 'text-center'>\r\n            <h4 className = 'mb-5'>Create a Product</h4>\r\n            <div className=\"form-group mt-4\" style = {{paddingLeft: '62px'}}>\r\n                    <input type=\"text\" className=\"form-control mb-2\" id = 'title' name = 'title' placeholder=\"Enter Your Product Title\" onChange = {handleProductChange} />\r\n                </div>\r\n                <div className=\"form-group mt-4\" style = {{paddingLeft: '62px'}}>\r\n                    <input type=\"text\" className=\"form-control mb-2\" id = 'subTitle' name = 'subTitle' placeholder=\"Enter Your Product's Sub-Title\" onChange = {handleProductChange} />\r\n                </div>\r\n                <div className=\"form-group mt-4\" style = {{paddingLeft: '62px'}}>\r\n                    <input type=\"Number\" className=\"form-control mb-2\" id = 'price' name = 'price' placeholder=\"Enter Product's Price in Rs.\" onChange = {handleProductChange} />\r\n                </div>\r\n               <div className = 'my-3'>\r\n                <Select\r\n                      mode=\"tags\"\r\n                      placeholder=\"Select Size..\"\r\n                      defaultValue={[]}\r\n                      onChange={handleSizeChange}\r\n                      style={{ width: '80%', marginLeft: '22px', marginTop: '6px' }}\r\n                    > \r\n                    <Option key = 'Baby'>Baby</Option>\r\n                    <Option key = 'XS'>XS</Option>\r\n                    <Option key = 'S'>S</Option>\r\n                    <Option key = 'M'>M</Option>\r\n                    <Option key = 'L'>L</Option>\r\n                    <Option key = 'XL'>XL</Option>\r\n                    <Option key = 'XXL'>XXL</Option>\r\n                      \r\n                </Select>\r\n                 </div>\r\n\r\n                 <div className = 'my-3'>\r\n                <Select\r\n                      mode=\"tags\"\r\n                      placeholder=\"Select Color..\"\r\n                      defaultValue={[]}\r\n                      onChange={handleColorChange}\r\n                      style={{ width: '80%', marginLeft: '22px', marginTop: '6px' }}\r\n                    > \r\n                    <Option key = 'White'>White</Option>\r\n                    <Option key = 'Black'>Black</Option>\r\n                    <Option key = 'Brown'>Brown</Option>\r\n                    <Option key = 'Red'>Red</Option>\r\n                    <Option key = 'Green'>Green</Option>\r\n                    <Option key = 'Gray'>Gray</Option>\r\n                    <Option key = 'Blue'>Blue</Option>\r\n                      \r\n                </Select>\r\n                 </div>\r\n\r\n                    <div className = 'ml-4'>\r\n                     <Select\r\n                            style={{ width: 380 }}\r\n                            placeholder=\"Select a Brand\"\r\n                            onChange={handleBrandChange}\r\n                           >\r\n                        {\r\n                          brands.map(brand => {\r\n                            return(\r\n                              <Option key = {brand._id}>{brand.name}</Option>\r\n\r\n                            )\r\n                          })\r\n                           \r\n                        }\r\n                          \r\n                    </Select>\r\n                    </div>\r\n                         \r\n                 <div className=\"form-group mt-4\" style = {{paddingLeft: '62px'}}>\r\n                    <input type=\"Number\" className=\"form-control mb-2\" id = 'offer' name = 'offer' placeholder=\"Enter Offer\" onChange = {handleProductChange} />\r\n                </div>\r\n                \r\n\r\n                    <div className = 'my-3'>\r\n                      <ReactQuill placeholder = \"Product Description\" theme=\"snow\" value={description} onChange={setDescription}/>\r\n\r\n                     </div>\r\n\r\n                  <div className = 'my-3'>\r\n                  <input type=\"file\" name = 'file' multiple onChange = {handleImageChange}/>\r\n                     <ul className = 'list-unstyled'>\r\n                     {\r\n                       file.length > 0 ?\r\n                       file.map(pic => {\r\n                         return(\r\n                           <li key = {pic.name}>\r\n                             {pic.name}\r\n                           </li>\r\n\r\n                         )\r\n                       })\r\n                       :\r\n                       null\r\n                     }\r\n                     </ul>\r\n                  </div>  \r\n                   \r\n                  \r\n\r\n                   \r\n\r\n                  <TreeSelect\r\n                      showSearch\r\n                      style={{ width: '100%' }}\r\n                      dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\r\n                      placeholder=\"Please select\"\r\n                      allowClear\r\n                      treeDefaultExpandAll\r\n                      onChange={onCatChange}\r\n                    >\r\n                     {\r\n                       categories.map(mainCat => {\r\n                         return(\r\n                          <TreeNode value={mainCat._id} title={mainCat.name}>\r\n                            {\r\n                              mainCat.children.map(subCat => {\r\n                                return(\r\n                                  <TreeNode value={subCat._id} title={subCat.name}>\r\n                                    {\r\n                                      subCat.children.map(childCat => {\r\n                                        return(\r\n                                          <TreeNode value={childCat._id} title={childCat.name} />\r\n\r\n                                        )\r\n                                      })\r\n                                    }\r\n\r\n\r\n                                  </TreeNode>\r\n\r\n                                )\r\n\r\n                              })\r\n                            }\r\n\r\n\r\n\r\n                          </TreeNode>\r\n\r\n\r\n                         )\r\n                       })\r\n                     }\r\n                     \r\n\r\n                    </TreeSelect>\r\n                  <button type=\"submit\" size = 'large' className=\"btn btn-outline-danger mt-4\">Submit</button>\r\n                  </form>\r\n                  </Modal>\r\n\r\n              </div>\r\n    )\r\n}\r\n","E:\\demo-app\\Frontend\\src\\Components\\Admin\\GetProducts.js",["132","133","134","135","136","137","138","139","140","141","142"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Layout } from './Layout'\r\nimport createDOMPurify from 'dompurify'\r\nimport { JSDOM } from 'jsdom'\r\nimport { Modal, Select, TreeSelect } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport swal from 'sweetalert';\r\nimport ReactQuill from 'react-quill';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Link } from 'react-router-dom'\r\nimport { EditProduct } from './editProduct'\r\n\r\n\r\n\r\nconst { Option } = Select;\r\nconst { TreeNode } = TreeSelect;\r\n\r\nconst window = (new JSDOM('')).window\r\nconst DOMPurify = createDOMPurify(window)\r\n\r\nexport const GetProducts = () => {\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [product, setProduct] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [brands, setBrands] = useState([]);\r\n    const [cat, setCat] = useState('');\r\n\r\n       \r\n\r\n\r\n/************************************************** Fetch Products ***********************************************/   \r\n    const fetchProducts = async () => {\r\n        const response = await axios.get('/api/products/get').then(res => {\r\n            setProducts(res.data.products);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n        return () => {\r\n            \r\n        }\r\n    }, [success]);\r\n \r\n\r\n /************************************************** Get Product ***********************************************/   \r\n  const editHandler = (productId) => {\r\n    axios.get(`/api/products/${productId}`).then(res => {\r\n      setProduct(res.data.findProduct);\r\n    })\r\n\r\n}\r\n\r\n   \r\n     \r\n/************************************************** Modal ***********************************************/   \r\n    const showModal = () => {\r\n      setIsModalVisible(true);\r\n    };\r\n  \r\n    const handleOk = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n\r\n \r\n\r\n /************************************************** Delete Products ***********************************************/   \r\n  const deleteHandler = (productId) => {\r\n      console.log(productId)\r\n      axios.delete(`/api/products/delete/${productId}`).then(res => {\r\n          if(res.status === 200){\r\n              setSuccess(true);\r\n          swal('Success', res.data.successMessage, 'success'); \r\n          setSuccess(false);\r\n        } else {\r\n            swal('Error', 'Error in deleting product', 'error');\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n\r\n/****************************************** Get Categories & Brands *******************************************/    \r\n            const fetchCategories =  () => {\r\n                axios.get('/api/categories').then(data => {\r\n                setCategories(data.data);\r\n            })\r\n            }\r\n\r\n            const fetchBrands = () => {\r\n                axios.get('/api/categories/brands').then(data => {\r\n                setBrands(data.data.brands);\r\n            })\r\n            }\r\n\r\n\r\n            useEffect(() => {\r\n\r\n            fetchCategories();\r\n            fetchBrands();\r\n            return () => {\r\n            }\r\n            }, [isModalVisible]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n          <Layout sidebar>\r\n              <h1>Products</h1>\r\n              <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">Title</th>\r\n                    <th scope=\"col\">Sub-title</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Category</th>\r\n                    <th scope=\"col\">Brand</th>\r\n                    <th scope=\"col\">Action</th>\r\n                    \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    products.map(prod => {\r\n                        return(\r\n                            <tr key = {prod._id}>\r\n                            <th scope=\"row\">\r\n                            <a onClick = {() => {editHandler(prod._id); showModal()}}>\r\n                            {prod.title}\r\n                            </a>\r\n                           \r\n                            </th>\r\n                            <td>{prod.subTitle}</td>\r\n                            <td>Rs.{prod.price}</td>\r\n                            <td>\r\n                            {prod.category.name}\r\n                            </td>\r\n                            <td>{prod.brand.name}</td>\r\n                            <Link className='btn' style={{ textDecoration: 'none' }} to = {'/admin/product/edit/' + prod._id}><i className=\"fa fa-edit\"></i></Link>  &nbsp;\r\n                            <button className='btn'><i className=\"fa fa-trash-alt\" onClick = {() => deleteHandler(prod._id)}></i></button>\r\n                  \r\n                            </tr>\r\n\r\n                        )\r\n                    })\r\n                }\r\n              \r\n                \r\n                </tbody>\r\n                </table>\r\n                \r\n                 {\r\n                     product ? \r\n                <Modal width = {800} title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 my-4\">\r\n                                <h6>Product Title :</h6>\r\n                                    <b>{product.title} </b>\r\n                                </div>\r\n                                <div className=\"col-md-6 my-4\">\r\n                                <h6>Product Sub-Title :</h6>\r\n                                     <b>{product.subTitle} </b>\r\n                                </div>\r\n                                <div className=\"col-md-6 my-4\">\r\n                                <h6>Product Brand :</h6>\r\n                                     <b>{product.brand.name} </b>\r\n                                </div>\r\n                                <div className=\"col-md-6 my-4\">\r\n                                <h6>Product Category :</h6>\r\n                                     <b>{product.category.name} </b>\r\n                                </div>\r\n                                <div className=\"col-md-6 my-4\">\r\n                                <h6>Product Price :</h6>\r\n                                     <b>RS. {product.price} </b>\r\n                                </div>\r\n                                <div className=\"col-md-6 my-4\">\r\n                                <h6>Product Offer :</h6>\r\n                                     <b>RS. {product.offer} </b>\r\n                                </div>\r\n                                <div className=\"col-md-6 my-4\">\r\n                                <h6>Product Sizes :</h6>\r\n                                {\r\n                                    product.productSizes.map(size => {\r\n                                        return(\r\n                                            <b className = 'mr-3'>{size.size}</b>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </div>\r\n                                <div className=\"col-md-6 my-4\">\r\n                                <h6>Colors Available :</h6>\r\n                                {\r\n                                    product.productColors.map(color => {\r\n                                        return(\r\n                                            <b className = 'mr-2'>{color.color}</b>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </div>\r\n                                <div className=\"col-md-12 my-4\">\r\n                                <h6>Product Description :</h6>\r\n                            <p>    { <div dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(product.description) }} /> }</p>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 my-4\">\r\n                                <h6> Product Pictures :</h6>\r\n                                {\r\n                                    product.productPictures.map(pic => {\r\n                                        return(\r\n                                        <img width = '100' height = '100' className = 'mr-4 mt-3' src = {pic.img} alt = 'product'/>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </div>\r\n\r\n\r\n\r\n                               \r\n                            </div>\r\n                            </Modal>\r\n\r\n                            :\r\n                            null\r\n\r\n                 }\r\n\r\n          </Layout>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","E:\\demo-app\\Frontend\\src\\Components\\Admin\\createBrand.js",[],"E:\\demo-app\\Frontend\\src\\Components\\Admin\\GetBrands.js",["143","144","145"],"import { Button } from 'antd'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport swal from 'sweetalert'\r\nimport { CreateBrand } from './createBrand'\r\nimport { Layout } from './Layout'\r\n\r\nexport const GetBrands = () => {\r\n    const [brands, setBrands] = useState([]);\r\n    const [getBrand, setGetBrand] = useState('');\r\n    const [editBrand, setEditBrand] = useState('');\r\n    const [editBrandId, setEditBrandId] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        fetchBrands();\r\n        return () => {\r\n            \r\n        }\r\n    }, [success]);\r\n\r\n\r\n/**************************************************On Change ***********************************************/\r\n    \r\n  const handleBrandChange = (e) => {\r\n        setGetBrand(\r\n            e.target.value\r\n        )\r\n    }\r\n\r\n\r\n/**************************************************On Submit ***********************************************/\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        axios.put(`/api/categories/brands/update/${editBrandId}`, {name : getBrand.toUpperCase()}).then(res => {\r\n          if(res.status === 200) {\r\n              setSuccess(true);\r\n          swal('Great', res.data.successMessage, 'success');\r\n          setSuccess(false);\r\n            }\r\n          else if(res.status === 201) {\r\n            swal('Duplicate Error', res.data.errorMessage, 'error');\r\n          }\r\n          else {\r\n            swal('Error', 'Brand not created. Please try again', 'error');\r\n          }\r\n        })\r\n      }\r\n\r\n\r\n/************************************************** Modal ***********************************************/\r\n      const showModal = () => {\r\n        setIsModalVisible(true);\r\n      };\r\n    \r\n      const handleOk = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n    \r\n      const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n\r\n      \r\n    /************************************************** Fetch Brands ***********************************************/\r\n         const fetchBrands = async() => {\r\n                await axios.get('/api/categories/brands').then(res => {\r\n                    setBrands(res.data.brands);\r\n                })\r\n            }\r\n\r\n          \r\n\r\n  const editHandler = (brandId) => {\r\n      setEditBrandId(brandId);\r\n       axios.get(`/api/categories/brands/${brandId}`).then(res => {\r\n           setSuccess(true);\r\n           setGetBrand(res.data.brand.name);\r\n           setSuccess(false);\r\n       })\r\n\r\n  }\r\n  \r\n  const deleteHandler = async (brandId) => {\r\n      await axios.delete(`/api/categories/brands/delete/${brandId}`).then(res => {\r\n        if(res.status === 200) {\r\n            setSuccess(true);\r\n            swal('Great', res.data.successMessage, 'success');\r\n            setSuccess(false)\r\n         } else {\r\n             swal('Error', 'Unable to delete brand. Please try again');\r\n         }\r\n      })\r\n  }\r\n\r\n\r\n  \r\n    return (\r\n        <Layout sidebar>\r\n         <h3 className = 'text-center'>Brands</h3>\r\n         <div className = 'float-right mb-3'>\r\n             <CreateBrand/>\r\n         </div>\r\n            <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                 {\r\n                   brands.map(brand => {\r\n                       return(\r\n                           \r\n                        <tr key = {brand._id}>\r\n                        <td>{brand.name}</td>\r\n                        <button className='btn' style={{ textDecoration: 'none' }} onClick = {() => {editHandler(brand._id); showModal()}}><i className=\"fa fa-edit\"></i></button>  &nbsp;\r\n                        \r\n                        <button className='btn'><i className=\"fa fa-trash-alt\" onClick = {() => deleteHandler(brand._id)}></i></button>\r\n                        </tr>\r\n                       )\r\n                   })\r\n               }\r\n               <Modal title=\"Edit Brand\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>     \r\n                                              <form  className = 'text-center' onSubmit = {submitHandler}>\r\n                                              <h4 className = 'mb-5'>Edit Your Brand</h4>\r\n                                           \r\n                                                  <div className=\"form-group mt-4\" style = {{paddingLeft: '62px'}}> \r\n                                                      <input type=\"text\" className=\"form-control mb-2 border\" id = 'editedBrand' name = 'editedBrand' onChange = {handleBrandChange} value = {getBrand}   />\r\n                                                  </div> \r\n                                             \r\n                                              <button type=\"submit\" className=\"btn btn-outline-danger mt-4\">Submit</button>\r\n                                              </form>\r\n                                              </Modal>\r\n                \r\n            </tbody>\r\n            </table>\r\n        </Layout>\r\n    )\r\n}\r\n","E:\\demo-app\\Frontend\\src\\Components\\Admin\\editProduct.js",["146","147","148","149","150","151","152","153"],"import axios from 'axios';\r\n import React, { useEffect, useState} from 'react';\r\n import ReactQuill from 'react-quill';\r\n import { Link } from 'react-router-dom';\r\n import { Layout } from './Layout';\r\n import '../../index.css'\r\n import { Button, message, Select, TreeSelect, Upload } from 'antd';\r\n import { Badge } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst { Option } = Select;\r\nconst { TreeNode } = TreeSelect;\r\n\r\n\r\n export const EditProduct = (props) => {\r\n\r\n    const productId = props.match.params.id;\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [product, setProduct] = useState();\r\n    const [title, setTitle] = useState('');\r\n    const [subTitle, setSubTitle] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');  \r\n    const [price, setPrice] = useState('');\r\n    const [offer, setOffer] = useState(''); \r\n    const [size, setSize] = useState([]);\r\n    const [color, setColor] = useState([]);\r\n    const [file, setFile] = useState([]);\r\n    const [image, setImage] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [brands, setBrands] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [cat, setCat] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n\r\n    \r\n  \r\n /********************************************* Modal *******************************************************/    \r\n     const openModal = () => {\r\n         setModalVisible(true);\r\n         setTitle(product.title);\r\n         setSubTitle(product.subTitle);\r\n         setBrand(product.brand.name);\r\n         setBrandId(product.brand._id)\r\n         setCategory(product.category.name);\r\n         setImage(product.productPictures);\r\n         setDescription(product.description);\r\n         setOffer(product.offer);\r\n         setPrice(product.price);\r\n         setSize(product.productSizes);\r\n         setColor(product.productColors);\r\n        \r\n     }\r\n    \r\n    \r\n    \r\n/********************************************* OnChange *******************************************************/    \r\n                const quillChange = (value) => {\r\n                    setDescription(value);\r\n                }\r\n                \r\n\r\n                function handleSizeChange(value) {\r\n                  setSize(value);\r\n                    \r\n               }\r\n              \r\n                console.log(size);\r\n                console.log(brandId);\r\n                console.log(color);\r\n                console.log(description);\r\n                console.log(cat);\r\n\r\n                const onCatChange = value => {\r\n                    setCat(value);\r\n                };\r\n\r\n                function handleBrandChange(value) {\r\n                    setBrandId(\r\n                    value\r\n\r\n                    );\r\n                }\r\n\r\n                function handleColorChange(value) {\r\n                    setColor(\r\n                    value\r\n\r\n                    );\r\n                }\r\n\r\n\r\n\r\n/************************************************** Image Change ***********************************************/   \r\n              const handleImageChange = (e) => { \r\n                  setFile([\r\n                    ...file,\r\n                    e.target.files[0]\r\n          \r\n                  ])\r\n                }\r\n\r\n                const handleRemovePresentImage = name => {\r\n                  setImage(image => image.filter(item => item.img !== name.img));\r\n              }\r\n    \r\n              const handleRemoveUploadedImage = name => {\r\n                setFile(file => file.filter(item => item.name !== name.name))\r\n            }\r\n          //   const handleRemoveSizes = name => {\r\n          //     setSize(size => size.filter(item => item.size !== name.size))\r\n          // }\r\n\r\n          console.log(size);\r\n\r\n /************************************************** Get Product ***********************************************/   \r\n            const editHandler = () => {\r\n                axios.get(`/api/products/${productId}`).then(res => {\r\n                setProduct(res.data.findProduct);\r\n                })\r\n\r\n            }     \r\n\r\n\r\n /****************************************** Get Categories & Brands *******************************************/    \r\n            const fetchCategories =  () => {\r\n                axios.get('/api/categories').then(data => {\r\n                setCategories(data.data);\r\n            })\r\n            }\r\n\r\n            const fetchBrands = () => {\r\n                axios.get('/api/categories/brands').then(data => {\r\n                setBrands(data.data.brands);\r\n            })\r\n            }\r\n\r\n\r\n    \r\n  /***************************************************** useEffect **********************************************/           \r\n            useEffect(() => {\r\n                if(success) {\r\n                   setModalVisible(false);\r\n       \r\n                }\r\n                \r\n                \r\n                editHandler();\r\n                fetchBrands();\r\n                fetchCategories();\r\n             \r\n       \r\n       \r\n              return () => {\r\n               \r\n              }\r\n            }, [success]);\r\n       \r\n\r\n/***************************************************** Submit Event **********************************************/           \r\n     const submitHandler = (e) => {\r\n         e.preventDefault();\r\n         let data = new FormData();\r\n         data.append('title', title);\r\n         data.append('subTitle', subTitle);\r\n         data.append('description', description);\r\n         data.append('price', price);\r\n         data.append('offer', offer);\r\n         data.append('cat', cat);\r\n         data.append('brandId', brandId);\r\n         for(let sizes of size) {\r\n           data.append('sizes', sizes);\r\n          }\r\n          for(let colors of color) {\r\n           data.append('colors', colors);\r\n          }\r\n\r\n          for(let i = 0; i < image.length; i++)\r\n          {\r\n           data.append(\"images\", image[i].img);\r\n          }\r\n        \r\n            for(let pic of file) {\r\n          data.append('file', pic);\r\n         }\r\n         axios.put(`/api/products/update/${productId}`, data).then(res => {\r\n             if (res.status === 200) {\r\n             swal('Great!', res.data.successMessage, 'success');\r\n             }\r\n             else {\r\n               swal('Error', res.data.errorMessage, 'error');\r\n             }\r\n           })\r\n\r\n     }    \r\n      \r\n\r\n\r\n/***************************************************** Form *******************************************************/              \r\n        return ( \r\n            <>\r\n             <Layout sidebar>\r\n\r\n            <div className = 'container'>\r\n            {\r\n              modalVisible ? null :\r\n\r\n              <button onClick= { () => openModal({})} className = 'float-right mb-4 btn btn-outline-danger'>Click to Edit Product</button>            \r\n            }\r\n\r\n\r\n            </div>\r\n\r\n            {\r\n                modalVisible &&\r\n\r\n                <div className = 'container edit-form text-center'>\r\n                <form onSubmit = {submitHandler} style = {{width: '70%'}}>\r\n                    <h1 className = 'font-weight-bold'>Edit \"{product.title}\"</h1><br/>\r\n                   \r\n                    <div className=\"form-group\">\r\n                        <input type = 'text' className=\"form-control\" id = 'title' name ='title' value ={title} onChange = { (e) => setTitle(e.target.value)}></input><br/><br/>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                     </div>   \r\n                        <input type = 'text' className=\"form-control\" id = 'subTitle' name ='subTitle' value ={subTitle} onChange = { (e) => setSubTitle(e.target.value)}></input><br/><br/>\r\n                    <div className=\"form-group\">\r\n                        <input type = 'text' className=\"form-control\" id = 'price' value ={price} name ='price' onChange = { (e) => setPrice(e.target.value)}></input><br/><br/>\r\n                      </div>\r\n                    <div className = 'mb-3'>\r\n                  \r\n                    <Select\r\n                        mode=\"tags\"\r\n                       placeholder =  {\r\n                          size.map((size) => {\r\n                             return <span className = 'mr-3'>  {size.size}</span>\r\n                           \r\n                        })\r\n                       }\r\n                        \r\n                        onChange={handleSizeChange}\r\n                        style={{ width: '70%'}}\r\n                        > \r\n                        <Option key = 'Baby'>Baby</Option>\r\n                        <Option key = 'XS'>XS</Option>\r\n                        <Option key = 'S'>S</Option>\r\n                        <Option key = 'M'>M</Option>\r\n                        <Option key = 'L'>L</Option>\r\n                        <Option key = 'XL'>XL</Option>\r\n                        <Option key = 'XXL'>XXL</Option>\r\n                        \r\n                    </Select>\r\n                    </div>\r\n\r\n                    <div className = 'my-5'>\r\n                    <Select\r\n                        mode=\"tags\"\r\n                        placeholder = {[color.map(col => {\r\n                           \r\n                           return(\r\n                               <>\r\n                                <span className = 'mr-3'>{col.color}, \r\n                                </span>\r\n                                </>\r\n                           )\r\n                          \r\n                       \r\n                       })]}\r\n                        onChange={handleColorChange}\r\n                        style={{ width: '70%'}}\r\n                        > \r\n                        <Option key = 'White'>White</Option>\r\n                        <Option key = 'Black'>Black</Option>\r\n                        <Option key = 'Brown'>Brown</Option>\r\n                        <Option key = 'Red'>Red</Option>\r\n                        <Option key = 'Green'>Green</Option>\r\n                        <Option key = 'Gray'>Gray</Option>\r\n                        <Option key = 'Blue'>Blue</Option>\r\n                        \r\n                    </Select>\r\n                    </div>\r\n                    <Select\r\n                           className = 'mb-3'\r\n                            style={{ width: '70%' }}\r\n                            placeholder=\"Select a Brand\"\r\n                            defaultValue = {[brand]}\r\n                            onChange={handleBrandChange}\r\n                           >\r\n                        {\r\n                          brands.map(bran => {\r\n                            return(\r\n                              <Option key = {bran._id}>{bran.name}</Option>\r\n\r\n                            )\r\n                          })\r\n                           \r\n                        }\r\n                          \r\n                    </Select>\r\n\r\n                    <TreeSelect\r\n                    className = 'my-4'\r\n                      showSearch\r\n                      style={{ width: '70%' }}\r\n                      dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\r\n                      placeholder={category}\r\n                      defaultValue = {category}\r\n                      allowClear                      \r\n                      treeDefaultExpandAll\r\n                      onChange={onCatChange}\r\n                    >\r\n                     {\r\n                       categories.map(mainCat => {\r\n                         return(\r\n                          <TreeNode value={mainCat._id} title={mainCat.name}>\r\n                            {\r\n                              mainCat.children.map(subCat => {\r\n                                return(\r\n                                  <TreeNode value={subCat._id} title={subCat.name}>\r\n                                    {\r\n                                      subCat.children.map(childCat => {\r\n                                        return(\r\n                                          <TreeNode value={childCat._id} title={childCat.name} />\r\n\r\n                                        )\r\n                                      })\r\n                                    }\r\n                                  </TreeNode>\r\n                                )\r\n\r\n                              })\r\n                            }\r\n                          </TreeNode>\r\n                         )\r\n                       })\r\n                     }\r\n                     \r\n\r\n                    </TreeSelect>\r\n\r\n                    <div className = 'my-4'>\r\n                      <ReactQuill placeholder = \"Product Description\" theme=\"snow\" value= {description} onChange={quillChange}/>\r\n\r\n                     </div>\r\n\r\n                      <div className = 'my-5 files'>\r\n                        <input type = 'file' id = 'file' className = 'mt-2'  name ='file' onChange = {handleImageChange}></input><br/>\r\n                        <div>\r\n\r\n                        {\r\n                           image.map(pic => {\r\n                             return(\r\n                              <span className = 'mr-4'>\r\n                                <Badge className = 'mt-4 mb-2' count={<a onClick={() =>handleRemovePresentImage(pic)}><DeleteOutlined style = {{marginLeft: '10px'}} /></a>}>\r\n                                <img width = '100' height = '100' src = {pic.img} alt = 'images' className=\"head-example\" />\r\n                              </Badge>\r\n                                </span>\r\n                               \r\n                             )\r\n                           })\r\n                         }\r\n\r\n                        {file.map(pic => {\r\n                            return(\r\n                              <>\r\n                              <div> <span>{pic.name} </span>\r\n                                <a onClick={() =>handleRemoveUploadedImage(pic)}><DeleteOutlined style = {{marginLeft: '10px', color: 'black'}} /> </a>\r\n                                </div>\r\n                                </>\r\n                            )\r\n                        })}\r\n                       \r\n                        </div>\r\n                    </div>\r\n\r\n                  \r\n                      \r\n                   \r\n\r\n                    <div>\r\n                    <button type= 'submit' className = 'btn btn-outline-danger w-50 mt-3'> { productId? 'Update': 'Create'}</button> <br/> <br/>\r\n                    <button className = 'btn btn-outline-danger w-25' onClick= {() => setModalVisible(false)}>Back</button>\r\n                    </div>\r\n                  \r\n\r\n                </form>\r\n            </div>\r\n            }\r\n    \r\n            </Layout>\r\n           \r\n            </>\r\n          \r\n        )\r\n\r\n  }\r\n    \r\n\r\n",{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":11,"column":10,"nodeType":"160","messageId":"161","endLine":11,"endColumn":16},{"ruleId":"162","severity":1,"message":"163","line":51,"column":35,"nodeType":"164","endLine":51,"endColumn":125},{"ruleId":"165","severity":1,"message":"166","line":1,"column":2,"nodeType":"167","endLine":239,"endColumn":3},{"ruleId":"154","replacedBy":"168"},{"ruleId":"156","replacedBy":"169"},{"ruleId":"158","severity":1,"message":"170","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":21},{"ruleId":"158","severity":1,"message":"171","line":11,"column":9,"nodeType":"160","messageId":"161","endLine":11,"endColumn":15},{"ruleId":"158","severity":1,"message":"172","line":17,"column":29,"nodeType":"160","messageId":"161","endLine":17,"endColumn":34},{"ruleId":"158","severity":1,"message":"173","line":23,"column":10,"nodeType":"160","messageId":"161","endLine":23,"endColumn":24},{"ruleId":"158","severity":1,"message":"174","line":23,"column":26,"nodeType":"160","messageId":"161","endLine":23,"endColumn":43},{"ruleId":"158","severity":1,"message":"175","line":28,"column":11,"nodeType":"160","messageId":"161","endLine":28,"endColumn":19},{"ruleId":"158","severity":1,"message":"172","line":13,"column":32,"nodeType":"160","messageId":"161","endLine":13,"endColumn":37},{"ruleId":"158","severity":1,"message":"176","line":34,"column":30,"nodeType":"160","messageId":"161","endLine":34,"endColumn":42},{"ruleId":"158","severity":1,"message":"177","line":34,"column":75,"nodeType":"160","messageId":"161","endLine":34,"endColumn":104},{"ruleId":"158","severity":1,"message":"175","line":41,"column":21,"nodeType":"160","messageId":"161","endLine":41,"endColumn":29},{"ruleId":"158","severity":1,"message":"178","line":80,"column":13,"nodeType":"160","messageId":"161","endLine":80,"endColumn":23},{"ruleId":"158","severity":1,"message":"178","line":96,"column":15,"nodeType":"160","messageId":"161","endLine":96,"endColumn":25},{"ruleId":"158","severity":1,"message":"179","line":113,"column":15,"nodeType":"160","messageId":"161","endLine":113,"endColumn":31},{"ruleId":"154","replacedBy":"180"},{"ruleId":"156","replacedBy":"181"},{"ruleId":"158","severity":1,"message":"182","line":1,"column":18,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},{"ruleId":"158","severity":1,"message":"183","line":1,"column":47,"nodeType":"160","messageId":"161","endLine":1,"endColumn":53},{"ruleId":"158","severity":1,"message":"184","line":4,"column":24,"nodeType":"160","messageId":"161","endLine":4,"endColumn":38},{"ruleId":"158","severity":1,"message":"185","line":9,"column":8,"nodeType":"160","messageId":"161","endLine":9,"endColumn":18},{"ruleId":"158","severity":1,"message":"186","line":10,"column":16,"nodeType":"160","messageId":"161","endLine":10,"endColumn":22},{"ruleId":"158","severity":1,"message":"187","line":12,"column":10,"nodeType":"160","messageId":"161","endLine":12,"endColumn":21},{"ruleId":"158","severity":1,"message":"171","line":16,"column":9,"nodeType":"160","messageId":"161","endLine":16,"endColumn":15},{"ruleId":"158","severity":1,"message":"188","line":17,"column":9,"nodeType":"160","messageId":"161","endLine":17,"endColumn":17},{"ruleId":"158","severity":1,"message":"189","line":28,"column":12,"nodeType":"160","messageId":"161","endLine":28,"endColumn":22},{"ruleId":"158","severity":1,"message":"190","line":29,"column":12,"nodeType":"160","messageId":"161","endLine":29,"endColumn":18},{"ruleId":"158","severity":1,"message":"191","line":30,"column":12,"nodeType":"160","messageId":"161","endLine":30,"endColumn":15},{"ruleId":"158","severity":1,"message":"192","line":30,"column":17,"nodeType":"160","messageId":"161","endLine":30,"endColumn":23},{"ruleId":"158","severity":1,"message":"175","line":37,"column":15,"nodeType":"160","messageId":"161","endLine":37,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":137,"column":29,"nodeType":"164","endLine":137,"endColumn":87},{"ruleId":"158","severity":1,"message":"193","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":16},{"ruleId":"158","severity":1,"message":"194","line":12,"column":12,"nodeType":"160","messageId":"161","endLine":12,"endColumn":21},{"ruleId":"158","severity":1,"message":"195","line":12,"column":23,"nodeType":"160","messageId":"161","endLine":12,"endColumn":35},{"ruleId":"158","severity":1,"message":"196","line":4,"column":11,"nodeType":"160","messageId":"161","endLine":4,"endColumn":15},{"ruleId":"158","severity":1,"message":"193","line":7,"column":11,"nodeType":"160","messageId":"161","endLine":7,"endColumn":17},{"ruleId":"158","severity":1,"message":"182","line":7,"column":19,"nodeType":"160","messageId":"161","endLine":7,"endColumn":26},{"ruleId":"158","severity":1,"message":"183","line":7,"column":48,"nodeType":"160","messageId":"161","endLine":7,"endColumn":54},{"ruleId":"158","severity":1,"message":"197","line":38,"column":21,"nodeType":"160","messageId":"161","endLine":38,"endColumn":31},{"ruleId":"198","severity":1,"message":"199","line":162,"column":16,"nodeType":"200","endLine":162,"endColumn":25,"suggestions":"201"},{"ruleId":"162","severity":1,"message":"163","line":360,"column":71,"nodeType":"164","endLine":360,"endColumn":119},{"ruleId":"162","severity":1,"message":"163","line":373,"column":33,"nodeType":"164","endLine":373,"endColumn":82},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["202"],["203"],"'useDispatch' is defined but never used.","'Option' is assigned a value but never used.","'props' is defined but never used.","'editedCategory' is assigned a value but never used.","'setEditedCategory' is assigned a value but never used.","'response' is assigned a value but never used.","'mainCategory' is assigned a value but never used.","'subCategoryOfChildSubCategory' is assigned a value but never used.","'submitData' is assigned a value but never used.","'submitSubCatData' is assigned a value but never used.",["202"],["203"],"'message' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'ReactQuill' is defined but never used.","'uuidv4' is defined but never used.","'EditProduct' is defined but never used.","'TreeNode' is assigned a value but never used.","'categories' is assigned a value but never used.","'brands' is assigned a value but never used.","'cat' is assigned a value but never used.","'setCat' is assigned a value but never used.","'Button' is defined but never used.","'editBrand' is assigned a value but never used.","'setEditBrand' is assigned a value but never used.","'Link' is defined but never used.","'setSuccess' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'editHandler'. Either include it or remove the dependency array.","ArrayExpression",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},"Update the dependencies array to be: [editHandler, success]",{"range":"207","text":"208"},[5298,5307],"[editHandler, success]"]